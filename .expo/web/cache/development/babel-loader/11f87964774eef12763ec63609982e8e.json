{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Dev\\\\La capsule\\\\Projet\\\\Playdio\\\\playdio_frontend\\\\screens\\\\components\\\\GmailStyleSwipeableRow.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { RectButton } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nvar AnimatedIcon = Animated.createAnimatedComponent(Icon);\n\nvar GmailStyleSwipeableRow = function (_Component) {\n  _inherits(GmailStyleSwipeableRow, _Component);\n\n  var _super = _createSuper(GmailStyleSwipeableRow);\n\n  function GmailStyleSwipeableRow() {\n    var _this;\n\n    _classCallCheck(this, GmailStyleSwipeableRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderLeftActions = function (progress, dragX) {\n      var scale = dragX.interpolate({\n        inputRange: [0, 80],\n        outputRange: [0, 1],\n        extrapolate: 'clamp'\n      });\n      return React.createElement(RectButton, {\n        style: styles.leftAction,\n        onPress: _this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, React.createElement(AnimatedIcon, {\n        name: \"archive\",\n        size: 30,\n        color: \"#fff\",\n        style: [styles.actionIcon, {\n          transform: [{\n            scale: scale\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.renderRightActions = function (progress, dragX) {\n      var scale = dragX.interpolate({\n        inputRange: [-80, 0],\n        outputRange: [1, 0],\n        extrapolate: 'clamp'\n      });\n      return React.createElement(RectButton, {\n        style: styles.rightAction,\n        onPress: _this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(AnimatedIcon, {\n        name: \"delete-forever\",\n        size: 30,\n        color: \"#fff\",\n        style: [styles.actionIcon, {\n          transform: [{\n            scale: scale\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.updateRef = function (ref) {\n      _this._swipeableRow = ref;\n    };\n\n    _this.close = function () {\n      _this._swipeableRow.close();\n    };\n\n    return _this;\n  }\n\n  _createClass(GmailStyleSwipeableRow, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(Swipeable, {\n        ref: this.updateRef,\n        friction: 2,\n        leftThreshold: 80,\n        rightThreshold: 40,\n        renderLeftActions: this.renderLeftActions,\n        renderRightActions: this.renderRightActions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return GmailStyleSwipeableRow;\n}(Component);\n\nexport { GmailStyleSwipeableRow as default };\nvar styles = StyleSheet.create({\n  leftAction: {\n    flex: 1,\n    backgroundColor: '#388e3c',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse'\n  },\n  actionIcon: {\n    width: 30,\n    marginHorizontal: 10\n  },\n  rightAction: {\n    alignItems: 'center',\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n    backgroundColor: '#dd2c00',\n    flex: 1,\n    justifyContent: 'flex-end'\n  }\n});","map":{"version":3,"sources":["F:/Dev/La capsule/Projet/Playdio/playdio_frontend/screens/components/GmailStyleSwipeableRow.js"],"names":["React","Component","RectButton","Swipeable","Icon","AnimatedIcon","Animated","createAnimatedComponent","GmailStyleSwipeableRow","renderLeftActions","progress","dragX","scale","interpolate","inputRange","outputRange","extrapolate","styles","leftAction","close","actionIcon","transform","renderRightActions","rightAction","updateRef","ref","_swipeableRow","children","props","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","flexDirection","I18nManager","isRTL","width","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Animated, StyleSheet, Text, View, I18nManager } from 'react-native';\r\n\r\nimport { RectButton } from 'react-native-gesture-handler';\r\n\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\n\r\nconst AnimatedIcon = Animated.createAnimatedComponent(Icon);\r\n\r\nexport default class GmailStyleSwipeableRow extends Component {\r\n  renderLeftActions = (progress, dragX) => {\r\n    const scale = dragX.interpolate({\r\n      inputRange: [0, 80],\r\n      outputRange: [0, 1],\r\n      extrapolate: 'clamp',\r\n    });\r\n    return (\r\n      <RectButton style={styles.leftAction} onPress={this.close}>\r\n        <AnimatedIcon\r\n          name=\"archive\"\r\n          size={30}\r\n          color=\"#fff\"\r\n          style={[styles.actionIcon, { transform: [{ scale }] }]}\r\n        />\r\n      </RectButton>\r\n    );\r\n  };\r\n  renderRightActions = (progress, dragX) => {\r\n    const scale = dragX.interpolate({\r\n      inputRange: [-80, 0],\r\n      outputRange: [1, 0],\r\n      extrapolate: 'clamp',\r\n    });\r\n    return (\r\n      <RectButton style={styles.rightAction} onPress={this.close}>\r\n        <AnimatedIcon\r\n          name=\"delete-forever\"\r\n          size={30}\r\n          color=\"#fff\"\r\n          style={[styles.actionIcon, { transform: [{ scale }] }]}\r\n        />\r\n      </RectButton>\r\n    );\r\n  };\r\n  updateRef = ref => {\r\n    this._swipeableRow = ref;\r\n  };\r\n  close = () => {\r\n    this._swipeableRow.close();\r\n  };\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <Swipeable\r\n        ref={this.updateRef}\r\n        friction={2}\r\n        leftThreshold={80}\r\n        rightThreshold={40}\r\n        renderLeftActions={this.renderLeftActions}\r\n        renderRightActions={this.renderRightActions}>\r\n        {children}\r\n      </Swipeable>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  leftAction: {\r\n    flex: 1,\r\n    backgroundColor: '#388e3c',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse'\r\n  },\r\n  actionIcon: {\r\n    width: 30,\r\n    marginHorizontal: 10\r\n  },\r\n  rightAction: {\r\n    alignItems: 'center',\r\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\r\n    backgroundColor: '#dd2c00',\r\n    flex: 1,\r\n    justifyContent: 'flex-end'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}