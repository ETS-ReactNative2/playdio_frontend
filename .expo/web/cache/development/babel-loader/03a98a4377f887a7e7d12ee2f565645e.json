{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Dev\\\\La capsule\\\\Projet\\\\Playdio\\\\playdio_frontend\\\\screens\\\\signUp.js\";\nconsole.disableYellowBox = true;\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Input } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { withNavigationFocus } from 'react-navigation';\n\nfunction connectSignUp() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstName = _useState4[0],\n      setFirstName = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastName = _useState6[0],\n      setLastName = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  function signUp(email, firstName, lastName, password) {\n    var userCreate, resultServer;\n    return _regeneratorRuntime.async(function signUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(email, firstName, lastName, password);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://playdio-backend.herokuapp.com/sign-up', {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: \"email=\" + email + \"&firstName=\" + firstName + \"&lastName=\" + lastName + \"&password=\" + password\n            }));\n\n          case 3:\n            userCreate = _context.sent;\n            resultServer = userCreate.json();\n            console.log(resultServer);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    placeholder: \"email\",\n    type: \"email\",\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }\n  }), React.createElement(Input, {\n    placeholder: \"firtName\",\n    onChangeText: function onChangeText(value) {\n      return setFirstName(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"lastName\",\n    onChangeText: function onChangeText(value) {\n      return setLastName(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"password\",\n    type: \"passord\",\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Sign up with email\",\n    type: \"solid\",\n    onPress: function onPress() {\n      return signUp(email, firstName, lastName, password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default connect(null, null)(withNavigationFocus(connectSignUp));","map":{"version":3,"sources":["F:/Dev/La capsule/Projet/Playdio/playdio_frontend/screens/signUp.js"],"names":["console","disableYellowBox","React","useState","Button","Input","connect","withNavigationFocus","connectSignUp","email","setEmail","firstName","setFirstName","lastName","setLastName","password","setPassword","signUp","log","fetch","method","headers","body","userCreate","resultServer","json","flex","value"],"mappings":";;;AAAAA,OAAO,CAACC,gBAAR,GAA2B,IAA3B;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AAGA,SAAQC,MAAR,EAAeC,KAAf,QAA2B,uBAA3B;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,SAASC,aAAT,GAAyB;AAAA,kBAEAL,QAAQ,EAFR;AAAA;AAAA,MAEhBM,KAFgB;AAAA,MAEVC,QAFU;;AAAA,mBAGQP,QAAQ,EAHhB;AAAA;AAAA,MAGhBQ,SAHgB;AAAA,MAGNC,YAHM;;AAAA,mBAIMT,QAAQ,EAJd;AAAA;AAAA,MAIhBU,QAJgB;AAAA,MAIPC,WAJO;;AAAA,mBAKMX,QAAQ,EALd;AAAA;AAAA,MAKhBY,QALgB;AAAA,MAKPC,WALO;;AAMvB,WAAeC,MAAf,CAAsBR,KAAtB,EAA4BE,SAA5B,EAAsCE,QAAtC,EAA+CE,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AACEf,YAAAA,OAAO,CAACkB,GAAR,CAAYT,KAAZ,EAAkBE,SAAlB,EAA4BE,QAA5B,EAAqCE,QAArC;AADF;AAAA,6CAEuBI,KAAK,CAAC,+CAAD,EAAiD;AAC7EC,cAAAA,MAAM,EAAC,MADsE;AAE7EC,cAAAA,OAAO,EAAE;AAAC,gCAAe;AAAhB,eAFoE;AAG7EC,cAAAA,IAAI,aAAUb,KAAV,mBAA6BE,SAA7B,kBAAmDE,QAAnD,kBAAwEE;AAHC,aAAjD,CAF5B;;AAAA;AAEIQ,YAAAA,UAFJ;AAOEC,YAAAA,YAPF,GAOiBD,UAAU,CAACE,IAAX,EAPjB;AAQFzB,YAAAA,OAAO,CAACkB,GAAR,CAAYM,YAAZ;;AARE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,KAAD;AACM,IAAA,WAAW,EAAC,OADlB;AAEM,IAAA,IAAI,EAAC,OAFX;AAGM,IAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,aAASjB,QAAQ,CAACiB,KAAD,CAAjB;AAAA,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,EAME,oBAAC,KAAD;AACA,IAAA,WAAW,EAAC,UADZ;AAEA,IAAA,YAAY,EAAE,sBAACA,KAAD;AAAA,aAASf,YAAY,CAACe,KAAD,CAArB;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUE,oBAAC,KAAD;AACA,IAAA,WAAW,EAAC,UADZ;AAEA,IAAA,YAAY,EAAE,sBAACA,KAAD;AAAA,aAASb,WAAW,CAACa,KAAD,CAApB;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAcE,oBAAC,KAAD;AACA,IAAA,WAAW,EAAC,UADZ;AAEA,IAAA,IAAI,EAAC,SAFL;AAGA,IAAA,YAAY,EAAE,sBAACA,KAAD;AAAA,aAASX,WAAW,CAACW,KAAD,CAApB;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAmBE,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,oBADN;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,OAAO,EAAE;AAAA,aAAIV,MAAM,CAACR,KAAD,EAAOE,SAAP,EAAiBE,QAAjB,EAA0BE,QAA1B,CAAV;AAAA,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AA2BD;;AAID,eAAeT,OAAO,CACpB,IADoB,EAEpB,IAFoB,CAAP,CAGbC,mBAAmB,CAACC,aAAD,CAHN,CAAf","sourcesContent":["console.disableYellowBox = true; \r\nimport React,{useState} from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nimport {Button,Input} from 'react-native-elements'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport { withNavigationFocus } from 'react-navigation';\r\n\r\nfunction connectSignUp() {\r\n\r\n  const [email,setEmail]=useState()\r\n  const [firstName,setFirstName]=useState()\r\n  const [lastName,setLastName]=useState()\r\n  const [password,setPassword]=useState()\r\n  async function signUp(email,firstName,lastName,password){\r\n    console.log(email,firstName,lastName,password)\r\n  var userCreate = await fetch('https://playdio-backend.herokuapp.com/sign-up',{\r\n  method:\"POST\",\r\n  headers: {'Content-Type':'application/x-www-form-urlencoded'},\r\n  body:`email=${email}&firstName=${firstName}&lastName=${lastName}&password=${password}`\r\n})\r\nvar resultServer = userCreate.json()\r\nconsole.log(resultServer)\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <View style={{flex: 1}}>\r\n<Input\r\n      placeholder='email'\r\n      type='email'\r\n      onChangeText={(value)=>setEmail(value)}\r\n      />\r\n      <Input\r\n      placeholder='firtName'\r\n      onChangeText={(value)=>setFirstName(value)}\r\n      />      \r\n      <Input\r\n      placeholder='lastName'\r\n      onChangeText={(value)=>setLastName(value)}\r\n      />      \r\n      <Input\r\n      placeholder='password'\r\n      type='passord'\r\n      onChangeText={(value)=>setPassword(value)}\r\n      />\r\n      <Button\r\n      title=\"Sign up with email\"\r\n      type=\"solid\"\r\n      onPress={()=>signUp(email,firstName,lastName,password)}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(withNavigationFocus(connectSignUp))"]},"metadata":{},"sourceType":"module"}