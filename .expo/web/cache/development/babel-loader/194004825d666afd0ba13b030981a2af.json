{"ast":null,"code":"var _jsxFileName = \"F:\\\\Dev\\\\La capsule\\\\Projet\\\\Playdio\\\\playdio_frontend\\\\App.js\";\nconsole.disableYellowBox = true;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createAppContainer } from 'react-navigation';\nimport { Ionicons } from '@expo/vector-icons';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport Home from \"./screens/Home\";\nimport Playlist from \"./screens/Playlist\";\nimport Search from \"./screens/Search\";\nimport Connect from \"./screens/connect\";\nimport SignUp from \"./screens/signUp\";\nimport Play from \"./screens/Play\";\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport Login from \"./reducers/login\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nvar store = createStore(combineReducers({\n  Login: Login\n}));\nvar BottomNavigator = createBottomTabNavigator({\n  Home: Home,\n  Playlist: Playlist,\n  Search: Search\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var tintColor = _ref2.tintColor;\n        var iconName;\n\n        if (navigation.state.routeName == 'Home') {\n          iconName = 'ios-information-circle';\n          return React.createElement(SimpleLineIcons, {\n            name: \"home\",\n            size: 25,\n            color: tintColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 14\n            }\n          });\n        } else if (navigation.state.routeName == 'Playlist') {\n          iconName = 'radio';\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"radio\",\n            size: 24,\n            color: tintColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 14\n            }\n          });\n        } else if (navigation.state.routeName == 'Search') {\n          iconName = 'ios-search';\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: 25,\n            color: tintColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 14\n            }\n          });\n        }\n      }\n    };\n  },\n  tabBarOptions: {\n    activeTintColor: '#FFFFFF',\n    inactiveTintColor: '#FFFFFF',\n    style: {\n      backgroundColor: '#00838F'\n    }\n  }\n});\nStackNavigator = createStackNavigator({\n  Connect: Connect,\n  SignUp: SignUp,\n  Playlist: Playlist,\n  Play: Play,\n  BottomNavigator: BottomNavigator\n}, {\n  headerMode: 'none'\n});\nvar Navigation = createAppContainer(StackNavigator);\nexport default function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}\n;","map":{"version":3,"sources":["F:/Dev/La capsule/Projet/Playdio/playdio_frontend/App.js"],"names":["console","disableYellowBox","React","createAppContainer","Ionicons","SimpleLineIcons","MaterialCommunityIcons","createBottomTabNavigator","createStackNavigator","Home","Playlist","Search","Connect","SignUp","Play","createStore","combineReducers","Provider","Login","createMaterialBottomTabNavigator","store","BottomNavigator","defaultNavigationOptions","navigation","tabBarIcon","tintColor","iconName","state","routeName","tabBarOptions","activeTintColor","inactiveTintColor","style","backgroundColor","StackNavigator","headerMode","Navigation","App"],"mappings":"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","sourcesContent":["console.disableYellowBox = true; \r\nimport React from 'react';\r\nimport { View, Button } from 'react-native';\r\nimport {createAppContainer } from 'react-navigation';\r\n\r\n\r\n// library icon\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { SimpleLineIcons } from '@expo/vector-icons';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\n// Ajout des modules de navigation \r\nimport {createBottomTabNavigator} from 'react-navigation-tabs';\r\nimport {createStackNavigator} from 'react-navigation-stack';\r\n\r\nimport Home from './screens/Home';\r\nimport Playlist from './screens/Playlist';\r\nimport Search from './screens/Search';\r\nimport Connect from './screens/connect';\r\nimport SignUp from './screens/signUp';\r\nimport Play from './screens/Play';\r\n\r\nimport {createStore, combineReducers} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport Login from './reducers/login'\r\n\r\n/* import { forNoAnimation } from 'react-navigation-stack/lib/typescript/src/vendor/TransitionConfigs/CardStyleInterpolators'; */\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nconst store = createStore(combineReducers({Login}))\r\n\r\nvar BottomNavigator = createBottomTabNavigator({ // Creation du menu bottom avec les liens\r\n  Home: Home,\r\n  Playlist: Playlist,\r\n  Search:Search\r\n  },\r\n  {\r\n  defaultNavigationOptions: ({ navigation }) => ({ // creation des icÃ´nes\r\n  tabBarIcon: ({ tintColor }) => {\r\n  var iconName;\r\n    if (navigation.state.routeName == 'Home') {\r\n      iconName = 'ios-information-circle';\r\n      return <SimpleLineIcons name=\"home\" size={25} color={tintColor} />;\r\n\r\n      } else if (navigation.state.routeName == 'Playlist') {\r\n      iconName = 'radio';\r\n      return <MaterialCommunityIcons name=\"radio\" size={24} color={tintColor} />\r\n\r\n      }else if (navigation.state.routeName == 'Search') {\r\n      iconName = 'ios-search';\r\n      return <Ionicons name={iconName} size={25} color={tintColor} />;\r\n      }\r\n   // return <Ionicons name={iconName} size={25} color={tintColor} />;\r\n    },\r\n  }),\r\n      tabBarOptions: {\r\n          activeTintColor: '#FFFFFF',        \r\n          inactiveTintColor: '#FFFFFF',\r\n              style: {\r\n                  backgroundColor: '#00838F',\r\n  }\r\n  },\r\n  }\r\n  );\r\n\r\n  \r\nStackNavigator = createStackNavigator({\r\n  Connect:Connect,\r\n  SignUp:SignUp,\r\n  Playlist: Playlist,\r\n  Play:Play,\r\n  BottomNavigator:BottomNavigator\r\n}, \r\n{ \r\n  headerMode: 'none' \r\n})\r\n\r\nconst Navigation = createAppContainer(StackNavigator)\r\n\r\nexport default function App(){\r\n  return(\r\n    <Provider store={store}>\r\n      <Navigation/>\r\n    </Provider>\r\n  )\r\n} ;\r\n\r\n"]},"metadata":{},"sourceType":"module"}