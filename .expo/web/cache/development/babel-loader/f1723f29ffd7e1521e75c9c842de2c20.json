{"ast":null,"code":"var _jsxFileName = \"F:\\\\Dev\\\\La capsule\\\\Projet\\\\Playdio\\\\playdio_frontend\\\\screens\\\\components\\\\Swype.js\";\nimport React from 'react';\nimport { Avatar, Badge, Icon, withBadge, Card, ListItem } from 'react-native-elements';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 10,\n    paddingVertical: 20\n  },\n  text: {\n    color: '#4a4a4a',\n    fontSize: 15\n  },\n  separator: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#e4e4e4',\n    marginLeft: 10\n  },\n  leftAction: {\n    backgroundColor: '#388e3c',\n    justifyContent: 'center',\n    flex: 1\n  },\n  rightAction: {\n    backgroundColor: '#dd2c00',\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'flex-end'\n  },\n  actionText: {\n    color: '#fff',\n    fontWeight: '600',\n    padding: 20\n  }\n});\nexport var Separator = function Separator() {\n  return React.createElement(View, {\n    style: styles.separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }\n  });\n};\n\nvar LeftActions = function LeftActions(progress, dragX, onPress) {\n  var scale = dragX.interpolate({\n    inputRange: [0, 100],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  });\n  return React.createElement(View, {\n    style: styles.leftAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.Text, {\n    style: [styles.actionText, {\n      transform: [{\n        scale: scale\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n};\n\nvar RightActions = function RightActions(progress, dragX, onPress) {\n  var scale = dragX.interpolate({\n    inputRange: [-100, 0],\n    outputRange: [1, 0],\n    extrapolate: 'clamp'\n  });\n  return React.createElement(View, {\n    style: styles.rightAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.Text, {\n    style: [styles.actionText, {\n      transform: [{\n        scale: scale\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Delete\"));\n};\n\nvar ListItemSwap = function ListItemSwap(_ref) {\n  var id = _ref.id,\n      text = _ref.text,\n      name = _ref.name,\n      url = _ref.url,\n      onSwipeFromLeft = _ref.onSwipeFromLeft,\n      onSwipeFromRight = _ref.onSwipeFromRight;\n  return React.createElement(Swipeable, {\n    renderLeftActions: LeftActions,\n    onSwipeableLeftOpen: (onSwipeFromLeft, id),\n    renderRightActions: RightActions,\n    onSwipeableRightOpen: onSwipeFromRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, React.createElement(ListItem, {\n    leftAvatar: {\n      source: {\n        uri: url\n      }\n    },\n    title: name,\n    subtitle: text,\n    chevron: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default ListItemSwap;","map":{"version":3,"sources":["F:/Dev/La capsule/Projet/Playdio/playdio_frontend/screens/components/Swype.js"],"names":["React","Avatar","Badge","Icon","withBadge","Card","ListItem","Swipeable","styles","StyleSheet","create","container","backgroundColor","paddingHorizontal","paddingVertical","text","color","fontSize","separator","flex","height","marginLeft","leftAction","justifyContent","rightAction","alignItems","actionText","fontWeight","padding","Separator","LeftActions","progress","dragX","onPress","scale","interpolate","inputRange","outputRange","extrapolate","transform","RightActions","ListItemSwap","id","name","url","onSwipeFromLeft","onSwipeFromRight","source","uri"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAwCC,IAAxC,EAA8CC,QAA9C,QAA8D,uBAA9D;;;;;;AAYA,OAAOC,SAAP,MAAsB,wCAAtB;AAIA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAE,MADR;AAETC,IAAAA,iBAAiB,EAAE,EAFV;AAGTC,IAAAA,eAAe,EAAE;AAHR,GADoB;AAM/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GANyB;AAU/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTR,IAAAA,eAAe,EAAE,SAHR;AAITS,IAAAA,UAAU,EAAE;AAJH,GAVoB;AAgB/BC,EAAAA,UAAU,EAAE;AACVV,IAAAA,eAAe,EAAE,SADP;AAEVW,IAAAA,cAAc,EAAE,QAFN;AAGVJ,IAAAA,IAAI,EAAE;AAHI,GAhBmB;AAsB/BK,EAAAA,WAAW,EAAE;AACXZ,IAAAA,eAAe,EAAE,SADN;AAEXW,IAAAA,cAAc,EAAE,QAFL;AAGXJ,IAAAA,IAAI,EAAE,CAHK;AAIXM,IAAAA,UAAU,EAAE;AAJD,GAtBkB;AA4B/BC,EAAAA,UAAU,EAAE;AACVV,IAAAA,KAAK,EAAE,MADG;AAEVW,IAAAA,UAAU,EAAE,KAFF;AAGVC,IAAAA,OAAO,EAAE;AAHC;AA5BmB,CAAlB,CAAf;AAmCA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAAlB;;AAEP,IAAMY,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,EAA8B;AAEhD,MAAMC,KAAK,GAAGF,KAAK,CAACG,WAAN,CAAkB;AAC9BC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,GAAJ,CADkB;AAE9BC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFiB;AAG9BC,IAAAA,WAAW,EAAE;AAHiB,GAAlB,CAAd;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,MAAM,CAACc,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACd,MAAM,CAACkB,UAAR,EAAoB;AAAEa,MAAAA,SAAS,EAAE,CAAC;AAAEL,QAAAA,KAAK,EAALA;AAAF,OAAD;AAAb,KAApB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF;AAOD,CAdD;;AAgBA,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACT,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,EAA8B;AAEjD,MAAMC,KAAK,GAAGF,KAAK,CAACG,WAAN,CAAkB;AAC9BC,IAAAA,UAAU,EAAE,CAAC,CAAC,GAAF,EAAM,CAAN,CADkB;AAE9BC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAG,CAAH,CAFiB;AAG9BC,IAAAA,WAAW,EAAE;AAHiB,GAAlB,CAAd;AAMA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,MAAM,CAACgB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAAChB,MAAM,CAACkB,UAAR,EAAoB;AAAEa,MAAAA,SAAS,EAAE,CAAC;AAAEL,QAAAA,KAAK,EAALA;AAAF,OAAD;AAAb,KAApB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF;AAOD,CAfD;;AAoBA,IAAMO,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAEC,EAAF,QAAEA,EAAF;AAAA,MAAM3B,IAAN,QAAMA,IAAN;AAAA,MAAW4B,IAAX,QAAWA,IAAX;AAAA,MAAiBC,GAAjB,QAAiBA,GAAjB;AAAA,MAAsBC,eAAtB,QAAsBA,eAAtB;AAAA,MAAuCC,gBAAvC,QAAuCA,gBAAvC;AAAA,SACnB,oBAAC,SAAD;AACE,IAAA,iBAAiB,EAAEhB,WADrB;AAEE,IAAA,mBAAmB,GAAEe,eAAe,EAACH,EAAlB,CAFrB;AAIG,IAAA,kBAAkB,EAAEF,YAJvB;AAKE,IAAA,oBAAoB,EAAEM,gBALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtC,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,QAAD;AAEA,IAAA,UAAU,EAAE;AAAEoC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAACJ;AAAN;AAAV,KAFZ;AAGA,IAAA,KAAK,EAAED,IAHP;AAIA,IAAA,QAAQ,EAAE5B,IAJV;AAKA,IAAA,OAAO,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,CADmB;AAAA,CAArB;;AAyBA,eAAe0B,YAAf","sourcesContent":["import React from 'react';\r\nimport { Avatar, Badge, Icon, withBadge,Card, ListItem } from 'react-native-elements'\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\n// import Swipeable from 'react-native-gesture-handler/Swipeable';\r\n// import { GestureHandler } from 'expo';\r\n// const { Swipeable } = GestureHandler;\r\n\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#fff',\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n  },\r\n  text: {\r\n    color: '#4a4a4a',\r\n    fontSize: 15,\r\n  },\r\n  separator: {\r\n    flex: 1,\r\n    height: 1,\r\n    backgroundColor: '#e4e4e4',\r\n    marginLeft: 10,\r\n  },\r\n  leftAction: {\r\n    backgroundColor: '#388e3c',\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n    \r\n  },\r\n  rightAction: {\r\n    backgroundColor: '#dd2c00',\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n    alignItems: 'flex-end',\r\n  },\r\n  actionText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n    padding: 20,\r\n  },\r\n});\r\n\r\nexport const Separator = () => <View style={styles.separator} />;\r\n\r\nconst LeftActions = (progress, dragX, onPress) => {\r\n\r\n  const scale = dragX.interpolate({\r\n    inputRange: [0, 100],\r\n    outputRange: [0, 1],\r\n    extrapolate: 'clamp',\r\n  });\r\n  return (\r\n    <View style={styles.leftAction}>\r\n      <Animated.Text style={[styles.actionText, { transform: [{ scale }] }]}>\r\n      Add\r\n      </Animated.Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst RightActions = (progress, dragX, onPress) => {\r\n\r\n  const scale = dragX.interpolate({\r\n    inputRange: [-100,0],\r\n    outputRange: [1,0],\r\n    extrapolate: 'clamp',\r\n  });\r\n\r\n  return (\r\n    <View style={styles.rightAction}>\r\n      <Animated.Text style={[styles.actionText, { transform: [{ scale }] }]}>\r\n      Delete\r\n      </Animated.Text>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst ListItemSwap = ({id, text,name, url, onSwipeFromLeft, onSwipeFromRight}) => (\r\n  <Swipeable\r\n    renderLeftActions={LeftActions}\r\n    onSwipeableLeftOpen={onSwipeFromLeft,id}\r\n  \r\n     renderRightActions={RightActions}\r\n    onSwipeableRightOpen={onSwipeFromRight} \r\n\r\n  >\r\n    <View style={styles.container}>\r\n\r\n      <ListItem\r\n\r\n      leftAvatar={{ source: { uri:url } }}\r\n      title={name}\r\n      subtitle={text}\r\n      chevron\r\n      />\r\n\r\n\r\n    </View>\r\n  </Swipeable>\r\n  \r\n);\r\n\r\nexport default ListItemSwap;"]},"metadata":{},"sourceType":"module"}