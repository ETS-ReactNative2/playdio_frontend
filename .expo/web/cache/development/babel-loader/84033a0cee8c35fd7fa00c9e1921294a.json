{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Dev\\\\La capsule\\\\Projet\\\\Playdio\\\\playdio_frontend\\\\screens\\\\components\\\\AppleStyleSwipeableRow.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { RectButton } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nvar AppleStyleSwipeableRow = function (_Component) {\n  _inherits(AppleStyleSwipeableRow, _Component);\n\n  var _super = _createSuper(AppleStyleSwipeableRow);\n\n  function AppleStyleSwipeableRow() {\n    var _this;\n\n    _classCallCheck(this, AppleStyleSwipeableRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderLeftActions = function (progress, dragX) {\n      var trans = dragX.interpolate({\n        inputRange: [0, 50, 100, 101],\n        outputRange: [-20, 0, 0, 1]\n      });\n      return React.createElement(RectButton, {\n        style: styles.leftAction,\n        onPress: _this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.Text, {\n        style: [styles.actionText, {\n          transform: [{\n            translateX: trans\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, \"Archive\"));\n    };\n\n    _this.renderRightAction = function (text, color, x, progress) {\n      var trans = progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [x, 0]\n      });\n\n      var pressHandler = function pressHandler() {\n        _this.close();\n\n        alert(\"tourve alerte\", text);\n      };\n\n      return React.createElement(Animated.View, {\n        style: {\n          flex: 1,\n          transform: [{\n            translateX: trans\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(RectButton, {\n        style: [styles.rightAction, {\n          backgroundColor: color\n        }],\n        onPress: pressHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.actionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, text)));\n    };\n\n    _this.renderRightActions = function (progress) {\n      return React.createElement(View, {\n        style: {\n          width: 192,\n          flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }\n      }, _this.renderRightAction('More', '#C8C7CD', 192, progress), _this.renderRightAction('Flag', '#ffab00', 128, progress), _this.renderRightAction('More', '#dd2c00', 64, progress));\n    };\n\n    _this.updateRef = function (ref) {\n      _this._swipeableRow = ref;\n    };\n\n    _this.close = function () {\n      _this._swipeableRow.close();\n    };\n\n    return _this;\n  }\n\n  _createClass(AppleStyleSwipeableRow, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(Swipeable, {\n        ref: this.updateRef,\n        friction: 2,\n        leftThreshold: 30,\n        rightThreshold: 40,\n        renderLeftActions: this.renderLeftActions,\n        renderRightActions: this.renderRightActions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return AppleStyleSwipeableRow;\n}(Component);\n\nexport { AppleStyleSwipeableRow as default };\nvar styles = StyleSheet.create({\n  leftAction: {\n    flex: 1,\n    backgroundColor: '#497AFC',\n    justifyContent: 'center'\n  },\n  actionText: {\n    color: 'white',\n    fontSize: 16,\n    backgroundColor: 'transparent',\n    padding: 10\n  },\n  rightAction: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["F:/Dev/La capsule/Projet/Playdio/playdio_frontend/screens/components/AppleStyleSwipeableRow.js"],"names":["React","Component","RectButton","Swipeable","AppleStyleSwipeableRow","renderLeftActions","progress","dragX","trans","interpolate","inputRange","outputRange","styles","leftAction","close","actionText","transform","translateX","renderRightAction","text","color","x","pressHandler","alert","flex","rightAction","backgroundColor","renderRightActions","width","flexDirection","I18nManager","isRTL","updateRef","ref","_swipeableRow","children","props","StyleSheet","create","justifyContent","fontSize","padding","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Animated, StyleSheet, Text, View, I18nManager } from 'react-native';\r\n\r\nimport { RectButton } from 'react-native-gesture-handler';\r\n\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\n\r\nexport default class AppleStyleSwipeableRow extends Component {\r\n  renderLeftActions = (progress, dragX) => {\r\n    const trans = dragX.interpolate({\r\n      inputRange: [0, 50, 100, 101],\r\n      outputRange: [-20, 0, 0, 1],\r\n    });\r\n    return (\r\n      <RectButton style={styles.leftAction} onPress={this.close}>\r\n        <Animated.Text\r\n          style={[\r\n            styles.actionText,\r\n            {\r\n              transform: [{ translateX: trans }],\r\n            },\r\n          ]}>\r\n          Archive\r\n        </Animated.Text>\r\n      </RectButton>\r\n    );\r\n  };\r\n  renderRightAction = (text, color, x, progress) => {\r\n    const trans = progress.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [x, 0],\r\n    });\r\n    const pressHandler = () => {\r\n      this.close();\r\n      alert(\"tourve alerte\",text);\r\n    };\r\n    return (\r\n      <Animated.View style={{ flex: 1, transform: [{ translateX: trans }] }}>\r\n        <RectButton\r\n          style={[styles.rightAction, { backgroundColor: color }]}\r\n          onPress={pressHandler}>\r\n          <Text style={styles.actionText}>{text}</Text>\r\n        </RectButton>\r\n      </Animated.View>\r\n    );\r\n  };\r\n  renderRightActions = progress => (\r\n    <View style={{ width: 192, flexDirection: I18nManager.isRTL? 'row-reverse' : 'row' }}>\r\n      {this.renderRightAction('More', '#C8C7CD', 192, progress)}\r\n      {this.renderRightAction('Flag', '#ffab00', 128, progress)}\r\n      {this.renderRightAction('More', '#dd2c00', 64, progress)}\r\n    </View>\r\n  );\r\n  updateRef = ref => {\r\n    this._swipeableRow = ref;\r\n  };\r\n  close = () => {\r\n    this._swipeableRow.close();\r\n  };\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <Swipeable\r\n        ref={this.updateRef}\r\n        friction={2}\r\n        leftThreshold={30}\r\n        rightThreshold={40}\r\n        renderLeftActions={this.renderLeftActions}\r\n        renderRightActions={this.renderRightActions}>\r\n        {children}\r\n      </Swipeable>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  leftAction: {\r\n    flex: 1,\r\n    backgroundColor: '#497AFC',\r\n    justifyContent: 'center',\r\n  },\r\n  actionText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    backgroundColor: 'transparent',\r\n    padding: 10,\r\n  },\r\n  rightAction: {\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}